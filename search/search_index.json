{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"#technical-writer-onboarding-docs","text":"<p>This project contains internal documentation detailing the various documentation projects that technical writers at Seqera maintain. </p> <p>This README details the build flow for the onboarding docs. See MkDocs build for instructions to build the Tower documentation locally. </p>","title":"Technical writer onboarding docs"},{"location":"#high-level-flow","text":"<ol> <li>Markdown content is stored in the <code>/docs</code> folder of the tw-onboarding-mkdocs repository.</li> <li> <p>New content must be created in <code>feature branches</code> generated from <code>master</code>.</p> </li> <li> <p>Generate a token on  (i.e. \"Gitea\") <ol> <li></li> <li>Log in to git.seqera.io using your Seqera credentials</li> <li>In the top right menu, click on your avatar and select <code>Settings</code> from the drop-down menu</li> <li>Select <code>Applications</code> near the top of the page</li> <li>Generate a new token and copy the value after form submission</li> <li>Store the token value as a <code>GITEA_TOKEN</code> environment variable, optionally added to .bashrc/.zshrc. </li> <li>Run <code>source .bashrc</code> or <code>source .zshrc</code> once saved.</li> <li>Alternatively, use an existing token (e.g., Llewellyn or Graham).</li> </ol>  <li> <p>Build docs image</p> <p>The Dockerfile and other Docker build requirements are in the root of the repo. Docker build must be performed from the nf-tower-docs repo. You only need to do this once locally, unless structural or tooling changes are made to this repo.</p> <ol> <li>Clone tw-onboarding-mkdocs locally if you have not done so already.</li> <li>Navigate to the root of nf-tower-docs. </li> <li>Run the Docker build command:</li> </ol> <pre>1\n2\n3\n4</pre><pre><code>docker build --build-arg GITEA_TOKEN=${GITEA_TOKEN} -t tw-onboarding-docs .  # including the . at the end\n\n# Or, use a `make` command\nmake build-docker\n</code></pre> </li> <li> <p>Run the container</p> <p>Once the <code>docker build</code> has succeeded, run the Docker container:</p> <ol> <li>Check out the feature branch you wish to preview on tw-onboarding-mkdocs.</li> <li>Navigate to <code>/docs</code>.</li> <li>Run the Docker run command:</li> </ol> <pre>1</pre><pre><code>docker run --rm -p 8000:8000 -v ${PWD}:/docs tw-onboarding-docs:latest serve --dev-addr=0.0.0.0:8000\n</code></pre> </li> <li> <p>Visit http://0.0.0.0:8000 from your favorite browser.</p> </li>","title":"High-Level Flow"},{"location":"#contribution-guidelines","text":"<ul> <li>Write according to the content style guide</li> </ul>","title":"Contribution guidelines"},{"location":"#technical-review-guidelines","text":"<p>When assessing doc content for technical accuracy, keep in mind:</p> <ul> <li>How the content fits into our overall documentation and whether it is being added to the correct place.</li> <li>Whether the content can be simplified or streamlined in relation to existing content.</li> <li>Does the content instruct users according to best practices?</li> <li>Are there any edge cases or caveats that are helpful for users to know that should be added to the content?</li> </ul>","title":"Technical review guidelines"},{"location":"#mkdocs-mechanics","text":"<p>MkDocs is a powerful framework with many opportunities to extend functionality via plugins. Some packages have already been added to this project and affect how content is structured and referenced.</p>","title":"MkDocs mechanics"},{"location":"#navigation","text":"<p>To update the navigation menu, edit the <code>navigation</code> section of the <code>mkdocs.yml</code> file in the root of the repo.</p>","title":"Navigation"},{"location":"onboarding-checklist/checklist/","text":"","title":"TW onboarding reference"},{"location":"onboarding-checklist/checklist/#github-repositories","text":"<ul> <li>[ ] nf-tower-docs </li> <li>[ ] nf-tower-cloud</li> <li>[ ] nextflow-io</li> <li>[ ] Request to be added to the tower-docs-codeowners team on GH</li> </ul>","title":"GitHub Repositories"},{"location":"onboarding-checklist/checklist/#slack","text":"<ul> <li>[ ] Join the Nextflow and nf-core Slack. Join the #documentation channels for both.</li> <li>[ ] In the Seqera Slack, ask to be added to #tower-team, and add yourself to these channels:<ul> <li>documentation</li> <li>engineering</li> <li>product-tower</li> <li>customer-experience</li> </ul> </li> </ul>","title":"Slack"},{"location":"tower-docs/mkdocs/","text":"<p>The Tower docs site is built on a MkDocs Material project in the nf-tower-docs GitHub repository. nf-tower-docs is a public repository that houses the publishing mechanism and plugins to build the site, and allows external documentation users to submit documentation issues and enhancement requests. </p>","title":"Tower docs MkDocs project"},{"location":"tower-docs/mkdocs/#github-repositories","text":"<p>The source of truth for the Markdown files that form the documentation is the docs folder of the nf-tower-cloud repo. This is a private repo that contains the source code of the Tower application. While the Tower docs were originally entirely in the nf-tower-docs repo, we moved the <code>.md</code> content and <code>mkdocs.yml</code> configuration file to the nf-tower-cloud repo to maintain the documentation close to the source code of the application. This encourages engineers and other internal stakeholders to contribute to the documentation during the Tower feature building process. </p> <p>While we track issues on the nf-tower-docs repo to evaluate fixes and improvements needed on the docs site, all content contributions must be made on a feature branch in the docs folder on nf-tower-cloud. Pull requests raised for files in the docs folder are reviewed by a member of the <code>tower-docs-codeowners</code> team and the engineer or other SME most familiar with the feature being documented. </p>","title":"GitHub repositories"},{"location":"tower-docs/mkdocs/#automation","text":"<p>When documentation PRs are reviewed and merged to the master branch on nf-tower-cloud, a GitHub workflow copies the docs folder to the master branch of the nf-tower-docs repo so that content updates can be published manually from there. </p> <p>Once the PR has been merged to master in nf-tower-cloud and the docs-deploy workflow has successfully copied the content across to nf-tower-docs, we can publish to the master site. </p>","title":"Automation"},{"location":"tower-docs/mkdocs/#extensions","text":"<p>The Tower documentation project relies on mike for content versioning, Material-insiders for custom theme features and social cards, and a number of MkDocs plugins.</p> <p>Material-insiders requires access to the Seqera Gitea repository. Once your account has been created, generate an access token to use in your local MkDocs build:</p> <ol> <li>Select Settings from the user top-right drop-down menu.</li> <li>Select the Applications tab.</li> <li>Under Generate New Token, enter a token name and select Generate Token. </li> <li>Store this token as a <code>GITEA_TOKEN</code> environment variable on your machine. </li> </ol> <p>mike enables a version selector on the Tower docs site. The Tower version is specified and the version selector is configured each time the docs are published. See Publish for details. </p>","title":"Extensions"},{"location":"tower-docs/mkdocs/#mkdocs-plugins","text":"","title":"MkDocs plugins"},{"location":"tower-docs/mkdocs/#mkdocs-table-reader-plugin","text":"<p>Insert tables (CSV, YML, etc.) directly into markdown pages using a tag. How it's implemented:</p> <ol> <li>Activate as a <code>plugins</code> entry in <code>mkdocs.yml</code> (below <code>social</code> and <code>search</code>, but above other mkdocs plugins)</li> <li>Create an external yaml file in a <code>tables</code> folder within the content subfolder (e.g., <code>docs/enterprise/configuration/tables/compute_env.yml</code>)</li> <li>Add key-value pairs in groups, where each key represents a column name, and each value represents an entry in a row, e.g.:</li> </ol> <pre> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13</pre><pre><code>-\nEnvironment variable:            \"`TOWER_DB_USER`\"\nDescription: &gt;\n    The user account to access your database.&lt;br/&gt;\n    Create this user manually if using an external database.\nValue:                \"e.g., `db_user`\"\n-\nEnvironment variable:            \"`TOWER_DB_PASSWORD`\"\nDescription: &gt;\n    The user password to access your database.&lt;br/&gt;\n    Create this password manually if using an external database.\nValue:\n-\n</code></pre> <ol> <li>Each unique column name will be rendered in the table, so ensure that all row entries have the same column name keys. The example above shows the structure for two row entries in a table with three columns.</li> <li>Reference this table in other markdown files with <code>{{</code> <code>read_yaml('./tables/compute_env.yml')</code> <code>}}</code> (relative path to the table from the markdown file where it is being referenced).</li> </ol>","title":"mkdocs-table-reader-plugin:"},{"location":"tower-docs/mkdocs/#mkdocs-markdownextradata-plugin","text":"<p>Implement DRY-like variables for content which appears throughout the site ( such as the latest Tower Enterprise container names). How it's implemented:</p> <ol> <li>Activate as a <code>plugins</code> entry in <code>mkdocs.yml</code></li> <li>Create an external yaml file in <code>/docs/_data/</code> ( e.g., <code>images.yml</code> )</li> <li>Add key-value pairs to the external file ( e.g., <code>tower_fe_image: \"cr.seqera.io/private/nf-tower-enterprise/frontend:v23.1.3\"</code> ).</li> <li>Update the <code>plugins</code> entry with a path to the file:     <pre>1\n2\n3</pre><pre><code>plugins:\n    - markdownextradata:\n        data: _data/images.yml\n</code></pre></li> <li>Reference this variable in other markdown files with <code>{{ images.tower_fe_image }}</code>.</li> </ol>","title":"mkdocs-markdownextradata-plugin"},{"location":"tower-docs/mkdocs/#mkdocs-same-dir","text":"<p>Enable MkDocs to build with <code>mkdocs.yml</code> inside the <code>/docs</code> folder. List as a <code>plugins</code> entry in the <code>mkdocs.yml</code>, and add a <code>docs_dir: .</code> entry under the <code>edit_uri</code> entry.</p>","title":"mkdocs-same-dir"},{"location":"tower-docs/publish/","text":"<p>This page details how to publish content updates to the live site once new content has been successfully pushed to nf-tower-docs. See MkDocs for content contribution guidelines, and Style for the Markdown elements used in the Tower docs project. </p> <p>This guide assumes you have completed the Docker build instructions to set up your local environment. </p>","title":"Tower docs publish"},{"location":"tower-docs/publish/#publish-to-helptowernf","text":"<p>We have a Netlify deployment pipeline that publishes the nf-tower-docs <code>master-html</code> branch to the public docs site. </p> <p>From the root of your local nf-tower-docs:</p> <pre> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16</pre><pre><code>VERSION=23.2               # Major versions only. No patch.\nBRANCH=master-html\n\ngit checkout master\n\n# To check the branch locally:\nmike deploy -b $BRANCH --update-aliases $VERSION latest    # Use to serve l\nmkdocs serve\n\n# To push the branch to GH and the live site\nmike set-default latest -b $BRANCH\ngit push origin master-html\n# Check the live site ~10 seconds later.\n\n# Delete your local master-html branch once complete\ngit branch -d master-html\n</code></pre>","title":"Publish to help.tower.nf"},{"location":"tower-docs/style/","text":"<p>The site theme is based on MkDocs Material and Material-insiders. Material-insiders requires access to the Seqera Gitea repository. See MkDocs. </p> <p>We favor GitHub-flavored Markdown. </p>","title":"Tower docs style"},{"location":"tower-docs/style/#headers","text":"<p>The document title serves as the top-level heading, so we do not introduce a page with a heading.</p> <p>We use heading 2 (##) for main sections and increase heading level by 1 for each subsection level. </p>","title":"Headers"},{"location":"tower-docs/style/#admonitions","text":"<p>We use MkDocs Material admonitions without titles (e.g., <code>!!! note \"\"</code>):</p>  <p>This is a note. </p>   <p>This is a warning. </p>   <p>This is a tip. </p>","title":"Admonitions"},{"location":"tower-docs/style/#example-blocks","text":"<p>We use collapsible admonition blocks for examples:</p>  Title <p>An example block that is expanded by default.</p>   Title <p>An example block that is collapsed by default. </p>","title":"Example blocks"},{"location":"tower-docs/style/#content-tabs","text":"<p>We use content tabs for multiple side-by-side examples:</p> Tab 1Tab 2Tab 3   <p>Tab 1 content. </p>   <p>Tab 2 content. </p>   <p>Tab 3 content. </p>","title":"Content tabs"},{"location":"tower-docs/style/#mkdocs-tables","text":"<p>We use mkdocs-table-reader-plugin to render tables:</p> <ol> <li>Create an external yaml file in a <code>tables</code> folder within the content subfolder (e.g., <code>docs/enterprise/configuration/tables/my_table.yml</code>).</li> <li> <p>Add key-value pairs in groups, where each key represents a column name, and each value represents an entry in a row, e.g.:</p> <pre> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13</pre><pre><code>-\nEnvironment variable:            \"`TOWER_DB_USER`\"\nDescription: &gt;\n    The user account to access your database.&lt;br/&gt;\n    Create this user manually if using an external database.\nValue:                \"e.g., `db_user`\"\n-\nEnvironment variable:            \"`TOWER_DB_PASSWORD`\"\nDescription: &gt;\n    The user password to access your database.&lt;br/&gt;\n    Create this password manually if using an external database.\nValue:\n-\n</code></pre> </li> <li> <p>Each unique column name will be rendered in the table, so ensure that all row entries have the same column name keys. The example above shows the structure for two row entries in a table with three columns.</p> </li> <li>Reference this table in other markdown files with <code>{{ read_yaml('./tables/my_table.yml') }}</code> (relevant path to the table from the markdown file where it is being referenced).</li> </ol>","title":"MkDocs tables"},{"location":"tower-docs/style/#mkdocs-variables-for-content-re-use","text":"<p>We use mkdocs-markdownextradata-plugin to implement DRY-like variables for values that need to be updated in multiple locations on the site (e.g., the Tower container image URLs):</p> <ol> <li>Create an external yaml file in <code>/docs/_data/</code> (e.g., <code>images.yml</code>)</li> <li>Add key-value pairs to the external file (e.g. <code>tower_fe_image: \"cr.seqera.io/private/nf-tower-enterprise/frontend:v23.1.3\"</code>).</li> <li>Update the <code>plugins</code> entry with a path to the file:     <pre>1\n2\n3</pre><pre><code>plugins:\n    - markdownextradata:\n        data: _data/images.yml\n</code></pre></li> <li>Reference this variable in other markdown files with <code>{{ images.tower_fe_image }}</code>.</li> </ol>","title":"MkDocs variables for content re-use"},{"location":"tower-docs/tower-release-checklist/","text":"<p>Tower Enterprise is released in quarterly cycles. The code freeze during the last 4 weeks of the release cycle is used to test and draft instructions and documentation updates for release features and fixes. When features for the upcoming release are confirmed, a number of updates to documentation occur for each release cycle.</p>","title":"Tower Enterprise release checklist"},{"location":"tower-docs/tower-release-checklist/#weeks-leading-to-release","text":"<ul> <li>[ ]  Review release notes Google doc</li> <li>[ ]  Write content for new features, updates, breaking changes</li> <li>[ ]  Prep Tower docs version of release notes and changelog (enterprise/release_notes/23.2.md)</li> <li>[ ]  Compare list of fixes with doc requests backlog to see if any are addressed by them that need a new FAQ / doc update</li> </ul>","title":"Weeks leading to release"},{"location":"tower-docs/tower-release-checklist/#before-enterprise-release-announcement-email","text":"<ul> <li>[ ]  Update the following Tower docs pages with new CR URLs (<code>cr.seqera.io/private/nf-tower-enterprise/frontend:v22.4.2</code> , <code>cr.seqera.io/private/nf-tower-enterprise/backend:v23.2.0</code>) and nf-launcher image URL (<code>https://quay.io/seqeralabs/nf-launcher:j17-23.04.2</code>):<ul> <li>[ ]  templates/aws-ecs-cloudformation.json</li> <li>[ ]  templates/docker-compose.yml</li> <li>[ ]  templates/tower-cron.yml</li> <li>[ ]  templates/tower-svc.yml</li> <li>[ ]  docs/index.md</li> <li>[ ]  docs/prerequisites/aws.md</li> <li>[ ]  docs/prerequisites/azure.md</li> <li>[ ]  docs/prerequisites/gcp.md</li> <li>[ ]  docs/prerequisites/on-prem.md</li> </ul> </li> <li>[ ]  Review Paolo\u2019s release notes in nf-tower-deployment</li> <li>[ ]  Publish Tower docs version of release notes and changelog (docs/release_notes/23.2.md)</li> </ul>","title":"Before Enterprise release announcement email"}]}